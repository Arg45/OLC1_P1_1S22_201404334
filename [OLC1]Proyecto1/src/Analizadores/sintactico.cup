
/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones, paquetes
package Analizadores;
import java_cup.runtime.Symbol;

import Proyecto1.Index;

//------> Codigo para el parser,variables, metodos
parser code{:
        Index i = new Index();
        public String resultado = "";
:}

//------> Codigo para las acciones gramaticales
action code
{:  :}

/*--------------- 2da Area: Declaraciones -----------------------*/

//------> declaracion de terminales 

terminal LLAVE_A, LLAVE_C, MAYOR, PUNTO, COMA, PUNTOYCOMA, DOSPUNTOS, ADMI_C, INTE_C,
         MAS, MENOS, POR, DIV, CONTRADIV, OR, DPORCIENTO, COSO_N, 

         CONJUNTO, 
         DIGITO, LETRA, ID, CADENA;

//------> declaracion de no terminales
non terminal String INICIO, S, A, B, C, D, E, F, G, H, I, J,
                    definirconjuntos,definirexpresionregular,dobleporciento,notacionconjuntos,
                    er,expresionregularaevaluar;

precedence left CONJUNTO;
/*
precedence left PUNTO;
precedence left OR;
precedence left POR, MAS;*/

start with INICIO;

/*--------------- 3ra Area: Reglas Semanticas -----------------------*/

INICIO ::= S:a {: parser.resultado=a; /*System.out.println(a); i.txt_salida.setText(a);*/ :};

S ::= S:a A:b {: RESULT = a.toString()+b.toString(); :}
    | A:a {: RESULT = a.toString(); :}
    ;

A ::= LLAVE_A B:b LLAVE_C {: RESULT = " { "+b.toString()+" } "; :}
;
B ::= B:a C:b {: RESULT = a.toString()+b.toString(); :}
    | C:a {: RESULT = a.toString(); :}
;
C ::= definirconjuntos:a {: RESULT = a.toString(); :}
    | definirexpresionregular:a {: RESULT = a.toString(); :}
    | dobleporciento:a {: RESULT = a.toString(); :}
;
definirconjuntos ::= CONJUNTO:a DOSPUNTOS:b ID:c MENOS:d MAYOR:e notacionconjuntos:f PUNTOYCOMA:g 
    {: RESULT = a.toString()+b.toString()+c.toString()+d.toString()+e.toString()+f.toString()+g.toString(); :}
;
notacionconjuntos ::= E:a {: RESULT = a.toString(); :}
                    | F:a {: RESULT = a.toString(); :}
;
E ::= ID:a {: RESULT = a.toString(); :}
/*
E:a COMA:b LETRA:c {: RESULT = a.toString()+b.toString()+c.toString(); :}
    | E:a COSO_N:b LETRA:c {: RESULT = a.toString()+b.toString()+c.toString(); :}
    | LETRA:a {: RESULT = a.toString(); :}*/
;
F ::= F:a COMA:b DIGITO:c {: RESULT = a.toString()+b.toString()+c.toString(); :}
    | F:a COSO_N:b DIGITO:c {: RESULT = a.toString()+b.toString()+c.toString(); :}
    | DIGITO:a {: RESULT = a.toString(); :}
;
definirexpresionregular ::= ID:a MENOS:b MAYOR:c er:d PUNTOYCOMA:e {: RESULT = a.toString()+b.toString()+c.toString()+d.toString()+e.toString(); :}
;
er ::= er:a H:b {: RESULT = a.toString()+b.toString(); :}
    | H:a {: RESULT = a.toString(); :}
;
H ::= PUNTO:a {: RESULT = a.toString(); :}
    | MAS:a {: RESULT = a.toString(); :}
    | POR:a {: RESULT = a.toString(); :}
    | OR:a {: RESULT = a.toString(); :}
    | INTE_C:a {: RESULT = a.toString(); :}
    | I:a {: RESULT = a.toString(); :}
;
I ::= LLAVE_A J:b LLAVE_C {: RESULT = " { "+b.toString()+" } "; :}
    | CADENA:a {: RESULT = a.toString(); :}
;
J ::= LETRA:a {: RESULT = a.toString(); :}
    | DIGITO:a {: RESULT = a.toString(); :}
    | ID:a {: RESULT = a.toString(); :}
;
dobleporciento ::= DPORCIENTO:a DPORCIENTO:b expresionregularaevaluar:c {: RESULT = a.toString()+b.toString()+c.toString(); :}
                | expresionregularaevaluar:a {: RESULT = a.toString(); :}
;
expresionregularaevaluar ::= ID:a DOSPUNTOS:b CADENA:c PUNTOYCOMA:d {: RESULT = a.toString()+b.toString()+c.toString()+d.toString(); :}
;
